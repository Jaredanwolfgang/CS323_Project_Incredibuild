Functions: Function: add:[Body: [Return: (a + b)]], Functions: Function: add:[Body: [Return: (a + b)]], Functions: Function: main:[Body: [Variable Declaration: a = [0: u32] with dimensions []; Variable Assignment: a = 100: u32, Variable Declaration: b = [0: u32] with dimensions []; Variable Assignment: b = 100: u32, Variable Declaration: c = [0: f32] with dimensions []; Variable Assignment: c = 0.01: f32, Variable Declaration: d = [0: u32] with dimensions []; Variable Assignment: d = FuncCall: add[a, b], If: Condition: d > c then Body: [Variable Declaration: e = [0: f32] with dimensions []; Variable Assignment: e = FuncCall: add[a, c]], While Loop (Condition: d > a):
do Body: [If: Condition: Condition: e > c || Condition: a == b then Body: [If: Condition: Condition: c > e || Condition: a > 10: u32 then Body: [Variable Assignment: a = 0: u32, Variable Assignment: a = (b * c), Variable Assignment: b = (c - a), Variable Assignment: a = (b / d)] else Body: [If: Condition: Condition: e >= c && Condition: ! Condition: c > a then Body: [Variable Assignment: e = 0.01: f32]]]], Return: 0: u32]]